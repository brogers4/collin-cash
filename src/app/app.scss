// http://ionicframework.com/docs/theming/


// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.

.split-pane-visible {
    .split-pane-side.main-menu {
        max-width: 275px;
        border-right: 0;
        ion-header {
            display: flex;
            justify-content: center;
            .menu-container {
                height: 56px;
                display: flex;
                align-items: center;
                .menu-logo {
                    max-height: 52px;
                }
            }
        }
        ion-list button {
            &.active-page {
                background-color: color($colors,primary);
                color: color($colors,primary-contrast);
            }
            &:hover {
                background-color: color($colors,light);
                &.active-page {
                    background-color: color($colors,primary);
                }
            }
        }
    }
    .split-pane-main {
        ion-content {
            box-shadow: inset 16px 0 16px -16px rgba(0,0,0,0.25) !important;
        }
        
    }
}

.main-menu {
    
    ion-header {
        display: none;
    }
    button {
        &.active-page {
            color: color($colors,primary);
        }
    }
    .item {
        color: color($colors,dark-gray);
        border-bottom: 1px solid color($colors,medium);
        .item-inner {
            border-bottom: 0;
        }
        &:first-child {
            border-top: 0;
        }
        &:last-child {
            border-bottom: 1px solid color($colors,medium);
        }
    }
}

ion-content {
    ion-grid {
        max-width: 1000px;
        ion-row {
            ion-col {
                &.grid-header {
                    padding: 10px;
                    text-align: center;
                    font-size: 1.2em;
                    background-color: color($colors,light);
                    color: color($colors,dark);
                }
                &.col-table-header {
                    font-weight: 600;
                }
            }
        }
    }
}
    

@include respond-to(small) {
    .split-pane-main {
        .ion-page {
            .content {
                .scroll-content {
                    padding: 8px 0 8px 0;
                }
            }
        }
    }
}

@include respond-to(medium) {
    .split-pane-visible {
        .split-pane-side.main-menu {
            max-width: 50px;
            min-width: 50px;
        }
    }
}

// Global override for overflow when not on iOS. Note: with overflow
// set to auto, bounce-back feature will not work.
ion-content:not(.content-ios){
    .scroll-content {
        overflow-y: auto;
    }
}

// Global override if you want to use Ionic Icon within material menu
.mat-menu-panel {
    .mat-menu-content {
        .mat-menu-item {
            ion-icon {
                vertical-align: middle;
                margin-right: 12px;
                font-size: 1.5em;
            }
        }
    }
}

$deep-shadow: 0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.4);
$med-shadow: 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.4);
$lite-shadow: 0 4px 15px 3px rgba(0, 0, 0, 0.12), 0 6px 8px -3px rgba(0, 0, 0, 0.4);
$hard-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.4);
ion-card {
    &.hover-elevation {
        transition: all 0.3s;
        &:hover {
            cursor: pointer;
            box-shadow: $lite-shadow;
            transform: translateY(-4px);
        }
    }
    &.deep-shadow {
        box-shadow: $deep-shadow;
    }
    &.no-shadow {
        box-shadow: none;
    }
}